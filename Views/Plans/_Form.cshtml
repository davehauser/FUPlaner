@model LessonFormDisplay;

<form method="POST">
  <div asp-validation-summary="ModelOnly"></div>
  <input asp-for="Id" />
  <fieldset>
    <legend>Allgemeine Daten</legend>
    <div class="row">
      <div class="col-sm">
        <label>Lektion</label>
        <p id="token">@Model.Token</p>
      </div>
      <div class="col-sm">
        <label asp-for="SubjectToken">Fach</label>
        @if(Model.Id > 0) {
          <p>@Model.SubjectName</p>
          <input type="hidden" asp-for="SubjectToken" />
        }
        else {
          <select asp-for="SubjectToken" asp-items="Model.SubjectsList" class="form-control"></select>
          <span asp-validation-for="SubjectToken"></span>
        }
      </div>
      <div class="col-sm">
        <div class="form-group">
          <label asp-for="Level"></label>
          <select asp-for="Level" asp-items="Model.LevelsList" class="form-control"></select>
          <span asp-validation-for="Level"></span>
        </div>
      </div>
      <div class="col-sm">
        <div class="form-group">
          <label asp-for="LessonNumber"></label>
          <input asp-for="LessonNumber" min="1"  class="form-control"/>
          <span asp-validation-for="LessonNumber"></span>
        </div>
      </div>
      <div class="col-sm">
        <div class="form-group">
          <label asp-for="MustSend"></label>
          <input asp-for="MustSend" class="form-control"/>
          <span asp-validation-for="MustSend"></span>
        </div>
      </div>
      <div class="col-sm">
        <div class="form-group">
          <label asp-for="AppointmentTime"></label>
          <input asp-for="AppointmentTime" patter="00:00"  class="form-control"/>
          <span asp-validation-for="AppointmentTime"></span>
        </div>
      </div>
    </div>
  </fieldset>
  <div class="row">
    <div class="col">
      <fieldset>
        <legend>Auftrag</legend>
        <div class="form-group">
          @Html.EditorFor(x => x.Task, null, new { htmlAttributes = new { @class = "form-control", style = "height: 10em;" } })
        </div>
      </fieldset>
    </div>
  </div>
  <fieldset>
    <legend>Links</legend>
    @for(var i = 0; i < Model.Links.Count(); i++) {
      <div class="row">
        <div class="col-sm">
          <div class="form-group">
            @Html.LabelFor(x => x.Links[i].Url)
            @Html.EditorFor(x => x.Links[i].Url, null, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Links[i].Url)
          </div>
        </div>
        <div class="col-sm">
          <div class="form-group">
            @Html.LabelFor(x => x.Links[i].DisplayText)
            @Html.EditorFor(x => x.Links[i].DisplayText, null, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Links[i].DisplayText)
          </div>
        </div>
      </div>
    }
    @for(var i = Model.Links.Count(); i < Model.Links.Count() + 3; i++) {
      <div class="row">
        <div class="col-sm">
          <div class="form-group">
            <label for="links[@i].Url">Url</label>
            <input type="text" id="Links[@i].Url" name="Links[@i].Url" class="form-control" value="" />
          </div>
        </div>
        <div class="col-sm">
          <div class="form-group">
            <label for="links[@i].DisplayText">Anzeigetext</label>
            <input type="text" id="Links[@i].DisplayText" name="Links[@i].DisplayText" class="form-control" value="" />
          </div>
        </div>
      </div>
    }
  </fieldset>
  <div class="row">
    <div class="col">
      <button type="submit" class="btn btn-primary">Speichern</button>
      <a asp-action="Index" asp-route-subject="@Model.SubjectToken" class="btn btn-link">Abbrechen</a>
    </div>
  </div>
</form>

<script type="text/javascript">
  const inputs = document.querySelectorAll('select, input');
  const subjectTokenElement = document.querySelector('#SubjectToken');
  const levelElement = document.querySelector('#Level');
  const lessonNumberElement = document.querySelector('#LessonNumber');
  inputs.forEach(x => x.addEventListener('change', y => {
    let subjectToken = subjectTokenElement.value;
    let level = levelElement.value;
    if(level === '0') { level = ''; }
    else { level = level + '.'; }
    let lessonNumber = lessonNumberElement.value.padStart(2, '0');
    let token = (subjectToken ?? '@Model.SubjectToken') + level + lessonNumber;
    document.querySelector('#token').textContent = token;
  }));
</script>



